name: Auto Deploy
on:
  push:
    branches: [main]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: create .env & .npmrc files
        run: |
          touch .env
          echo SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} >> .env
          echo SENDGRID_SINGLE_SENDER=${{ secrets.SENDGRID_SINGLE_SENDER }} >> .env
          echo TO_EMAIL=${{ secrets.TO_EMAIL }} >> .env
          echo WARNINGS=${{ secrets.WARNINGS }} >> .env

        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_SINGLE_SENDER: ${{ secrets.SENDGRID_SINGLE_SENDER }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          WARNINGS: ${{ secrets.WARNINGS }}

      #- name: Get yarn cache directory path
      #  id: yarn-cache-dir-path
      #  run: echo "::set-output name=dir::$(yarn cache dir)"

      #- uses: actions/cache@v2
      #  id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #  with:
      #    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #    restore-keys: ${{ runner.os }}-yarn-

      - name: Bootstraping packages
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build the project
        run: yarn build # --if-present
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

          #- run: npm run test:unit # run the tests

      # deploy site to netlify using secrets created on repository
      - uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=public --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
