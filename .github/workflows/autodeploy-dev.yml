name: "Auto Deploy - branch: dev"
env:
  BRANCH_NAME: dev
on:
  workflow_dispatch:
  push:
    branches:
      - "${{ env.BRANCH_NAME }}"
    paths-ignore:
      - 'docs/**/*.*'
      - '.github/**/*.*'
      - '.gitignore'
      - '.vscode/**/*.*'
      - 'README.md'
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_NAME }}
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Bootstraping packages
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build the project
        run: yarn run gatsby build
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          WARNINGS: ${{ secrets.WARNINGS }}
          NO_INDEX: ${{ secrets.NO_INDEX }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_SINGLE_SENDER: ${{ secrets.SENDGRID_SINGLE_SENDER }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
          #- run: npm run test:unit # run the tests

      - name: Check build
        if: ${{ failure() }}
        run: |
         echo "AT_STATE=Build: failed" >> $GITHUB_ENV

      # deploy site to netlify using secrets created on repository
      - name: Deploy site
        if: ${{ success() }}
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=public --prod

      - name: Check Deploy
        if: ${{ failure() && env.AT_STATE == ''}}
        run: |
          echo "AT_STATE=Deploy: failed" >> $GITHUB_ENV

      - name: msg
        if: ${{ success() }}
        run: |
          echo "AT_STATE=Deploy: OK" >> $GITHUB_ENV

      - name: Send to Telegram
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: "${{ env.AT_STATE }}, ${{ env.BRANCH_NAME }}"
